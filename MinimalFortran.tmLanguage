<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>f</string>
		<string>F</string>
		<string>f77</string>
		<string>F77</string>
		<string>for</string>
		<string>FOR</string>
		<string>fpp</string>
		<string>FPP</string>
		<string>f90</string>
		<string>F90</string>
		<string>f95</string>
		<string>F95</string>
		<string>f03</string>
		<string>F03</string>
		<string>f08</string>
		<string>F08</string>
	</array>
	<key>name</key>
	<string>MinimalFortran</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>built-in constants</string>
			<key>match</key>
			<string>(?i:(r8|r4|\.TRUE\.|\.FALSE\.))</string>
			<key>name</key>
			<string>constant.language.fortran</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>numbers</string>
			<key>match</key>
			<string>\b[\+\-]?[0-9]+\.?[0-9a-zA-Z_]*\b</string>
			<key>name</key>
			<string>constant.numeric.fortran</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?x:\s*([a-zA-Z\(\)]*)(?&lt;!end)\s*(?i:(function|subroutine|module|type))\b\s+([A-Za-z_][A-Za-z0-9_]*)\s*(?:(\()([^)]*)?  (\))?)?)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.fortran</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.fortran</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.fortran</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.fortran</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.fortran</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.fortran</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>First line of function/subroutine definition</string>
			<key>end</key>
			<string>(?x:((?i:end))($|\s*(?i:function|subroutine|module|type)(\s+[A-Za-z_][A-Za-z0-9_]*)?))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.fortran</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.fortran</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(?i:(integer|real|double\s+precision|complex|logical|character))\b(?=.*::)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.fortran</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Line of type specification</string>
			<key>end</key>
			<string>(?=!)|$</string>
			<key>name</key>
			<string>meta.specification.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>statements controling the flow of the program</string>
			<key>match</key>
			<string>\b(?i:(go\s*to|assign|to|if|then|else|elseif|elif|select\s*case|case|end\s*select|end\s*if|continue|stop|pause|do|end\s*do|while|cycle|use|allocate|sin|cos|exp|write|dot_product|maxval|minval|sum|all|any|abs|print))\b</string>
			<key>name</key>
			<string>keyword.control.fortran</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>programming units</string>
			<key>match</key>
			<string>\b(?i:(program|end\s+program|entry|block\s+data|call|return|contains|include|private|public))\b</string>
			<key>name</key>
			<string>keyword.control.programming-units.fortran</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>operators</string>
			<key>match</key>
			<string>((?&lt;!\=)\=(?!\=)|\%|\-|\+|\/\/|\/|(?!^)\*|::)</string>
			<key>name</key>
			<string>keyword.operator.fortran</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>logical operators</string>
			<key>match</key>
			<string>(?i:(\.and\.|\.or\.|\.eq\.|\.lt\.|\.le\.|\.gt\.|\.ge\.|\.ne\.|\.not\.|\.eqv\.|\.neqv\.|\=\=|\&gt;|\&lt;))</string>
			<key>name</key>
			<string>keyword.operator.logical.fortran</string>
		</dict>
		<dict>
			<key>IGNOREcomment</key>
			<string>brackets</string>
			<key>IGNOREmatch</key>
			<string>([\()])</string>
			<key>IGNOREname</key>
			<string>keyword.operator.parenthesis.fortran</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>data specification</string>
			<key>match</key>
			<string>\b(?i:(integer|real|double\s+precision|complex|logical|character|block\sdata|operator|assignment|type))\b</string>
			<key>name</key>
			<string>storage.type.fortran</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>data type attributes</string>
			<key>match</key>
			<string>\b(?i:(allocatable|pointer|dimension|common|equivalence|parameter|external|intrinsic|save|data|implicit\s*none|implicit|intent|in|out|inout))\b</string>
			<key>name</key>
			<string>storage.modifier.fortran</string>
		</dict>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>'</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fortran</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>String</string>
			<key>end</key>
			<string>'</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fortran</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.apostrophe.fortran</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.fortran</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>String</string>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.fortran</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.fortran</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^[Cc](?=\b|[Cc])</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.c.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.asterisk.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(error|warning)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.error.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>meta.preprocessor.diagnostic.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.fortran</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*#\s*(include|import)\b\s+</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.include.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?://|/\*))|$\n?</string>
			<key>name</key>
			<string>meta.preprocessor.fortran.include</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?&gt;\\\s*\n)</string>
					<key>name</key>
					<string>punctuation.separator.continuation.fortran</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.fortran</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.fortran</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.include.fortran</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>&lt;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.fortran</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&gt;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.fortran</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.other.lt-gt.include.fortran</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^[Cc](?=\b|[Cc])</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.c.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\*</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.asterisk.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>[!]</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.fortran</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.asterisk.fortran</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\\s*\n</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.fortran</string>
	<key>uuid</key>
	<string>8e494bec-c003-4942-9a3a-b73fc1acfca6</string>
</dict>
</plist>
